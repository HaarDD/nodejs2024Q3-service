services:
  app:
    image: haardd/nodejs2024q3-service-app:latest
    container_name: home-library-app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${PORT}:${PORT}"
    volumes:
      - ./src:/app/src:ro
      - ./nest-cli.json:/app/nest-cli.json:ro
      - ./tsconfig.json:/app/tsconfig.json:ro
    environment:
      - PORT=${PORT}
      - CHOKIDAR_USEPOLLING=true
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@db:${DB_PORT}/${DB_NAME}?schema=public
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_SECRET_REFRESH_KEY=${JWT_SECRET_REFRESH_KEY}
      - TOKEN_EXPIRE_TIME=${TOKEN_EXPIRE_TIME}
      - TOKEN_REFRESH_EXPIRE_TIME=${TOKEN_REFRESH_EXPIRE_TIME}
      - CRYPT_SALT=${CRYPT_SALT}
    command: sh -c "npx prisma migrate deploy && npm run start:dev"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

  db:
    image: haardd/nodejs2024q3-service-db:latest
    container_name: home-library-db
    build:
      context: .
      dockerfile: Dockerfile.db
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data: